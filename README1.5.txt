Реализовано:

1. Типы данных:
* int: Целые числа
* float: Числа с плавающей точкой
* bool: Логический тип
* string: Строковые литералы

2. Переменные:
* Объявление и присваивание: var_name = выражение; Тип переменной определяется типом присваиваемого значения

3. Арифметические операции:
* Сложение: + (работает с int и float, bool приводится к int 0/1)
* Вычитание: - (аналогично)
* Умножение: * (аналогично)
* Деление: / (результат double)
* Остаток от деления: % (для int как обычный остаток, для float как fmod)
* Унарный минус: -
* Префиксный инкремент: ++
* Постфиксный инкремент: ++
* Префиксный декремент: --
* Постфиксный декремент: --
* Приоритет операций и скобки: Поддерживается стандартный приоритет арифметических операций, можно использовать круглые скобки () для изменения порядка вычислений

4. Операции сравнения:
* Равно: == (сравнивает числа, bool и строки)
* Не равно: != (аналогично)
* Меньше: < (сравнивает числа)
* Больше: > (аналогично)
* Меньше или равно: <= (аналогично)
* Больше или равно: >= (аналогично)

5. Логические операции (работают с bool, числа интерпретируются как bool - 0/0.0 это false, остальное true):
* Логическое И: &&
* Логическое ИЛИ: ||

6. Управляющие конструкции:
* Условный оператор: if (условие) { ... }
* Условный оператор с else: if (условие) { ... } else { ... }
* Условный оператор с elif: if (условие1) { ... } elif (условие2) { ... } else { ... }
* Цикл while: while (условие) { ... }
* Цикл for (в стиле C++): for (инициализация; условие; обновление) { ... } 

7. Ввод/Вывод:
* Вывод: print(выражение); (печатает значения int, float, bool, string)
* Ввод строки: input() или input(".."); (возвращает string)
* Ввод целого числа: input_int() или input_int(".."); (пытается преобразовать ввод в int, возвращает int или ошибку)
* Ввод числа с плавающей точкой: input_float() или input_float(".."); (пытается преобразовать ввод в float (double), возвращает double или ошибку)

8. Прочее:
* Пробельные символы игнорируются
* Комментарии: Однострочные комментарии в стиле C++ (// ...)




